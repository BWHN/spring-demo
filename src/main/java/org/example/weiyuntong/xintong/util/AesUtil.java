package org.example.weiyuntong.xintong.util;

import javax.crypto.Cipher;
import javax.crypto.KeyGenerator;
import javax.crypto.SecretKey;
import javax.crypto.spec.SecretKeySpec;
import java.util.Base64;

/**
 * AES-三方接口请求、返回处理
 */
public class AesUtil {

    // 生成密钥
    public static String generateKey() throws Exception {
        KeyGenerator keyGen = KeyGenerator.getInstance("AES");
        keyGen.init(128); // AES的密钥长度（128位）
        return Base64.getEncoder().encodeToString(keyGen.generateKey().getEncoded());
    }

    // 加密方法
    public static String encrypt(String data, String keyStr) throws Exception {
        //key字符串转SecretKey
        byte[] decodedKey = Base64.getDecoder().decode(keyStr);
        SecretKey key = new SecretKeySpec(decodedKey, 0, decodedKey.length, "AES");

        //AES加密
        Cipher cipher = Cipher.getInstance("AES");
        cipher.init(Cipher.ENCRYPT_MODE, key);
        byte[] encryptedData = cipher.doFinal(data.getBytes());
        return Base64.getEncoder().encodeToString(encryptedData); // 返回Base64编码字符串
    }

    // 解密方法
    public static String decrypt(String encryptedData, String keyStr) throws Exception {
        //key字符串转SecretKey
        byte[] decodedKey = Base64.getDecoder().decode(keyStr);
        SecretKey key = new SecretKeySpec(decodedKey, 0, decodedKey.length, "AES");

        Cipher cipher = Cipher.getInstance("AES");
        cipher.init(Cipher.DECRYPT_MODE, key);
        byte[] decodedData = Base64.getDecoder().decode(encryptedData);
        byte[] originalData = cipher.doFinal(decodedData);
        return new String(originalData);
    }


    public static void main(String[] args) throws Exception {
        //1.创建key
        String keyStr = "kF4z2Tv6rZ8IVniBYnfXew==";  // 测试秘钥   kF4z2Tv6rZ8IVniBYnfXew==
        System.out.println("keyStr：：" + keyStr);

        //加密
        String encryptStr = "";
        System.out.println("加密后：：" + encryptStr);

        //解密
        String decryptStr = AesUtil.decrypt(encryptStr,keyStr);
        System.out.println("解密后：：" + decryptStr);
    }

}
